Terminals which are not used

   AS


State 62 conflicts: 2 shift/reduce


Grammar

    0 $accept: Prog $end

    1 Prog: classLOpt Bloc

    2 classTete: CLASS Classname

    3 classLOpt: Class classLOpt
    4          | /* empty */

    5 Class: Objet
    6      | classTete '(' LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj

    7 Objet: OBJECT Classname IS BlocObj

    8 LParamOpt: LParam
    9          | /* empty */

   10 LParam: Param ',' LParam
   11       | Param

   12 Param: VAR Id ':' TypeC ValVar
   13      | Id ':' TypeC ValVar

   14 ValVar: AFF Expr
   15       | /* empty */

   16 LDeclChamp: DeclChamp LDeclChamp
   17           | DeclChamp

   18 DeclChamp: VAR Id ':' TypeC AffOpt ';'

   19 TypeC: INTC
   20      | STRINGC
   21      | VOIDC
   22      | Classname

   23 AffOpt: AFF Expr
   24       | /* empty */

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt IS Bloc

   27 TypeCOpt: ':' TypeC
   28         | /* empty */

   29 OverrideOpt: OVERRIDE
   30            | /* empty */

   31 ExtendsOpt: EXTENDS Classname '(' LExprOpt ')'
   32           | /* empty */

   33 Expr: Cste
   34     | '(' Expr ')'
   35     | '(' TypeC Expr ')'
   36     | Selection
   37     | NEWC Classname '(' LExprOpt ')'
   38     | Envoi
   39     | ExprOperateur
   40     | TypeC

   41 LExprOpt: LExpr
   42         | /* empty */

   43 LExpr: Expr ',' LExpr
   44      | Expr

   45 ExprOperateur: Expr ADD Expr
   46              | Expr SUB Expr
   47              | Expr MUL Expr
   48              | Expr DIV Expr
   49              | SUB Expr
   50              | ADD Expr
   51              | Expr CONCAT Expr
   52              | Expr RelOp Expr

   53 Instr: Expr ';'
   54      | Bloc
   55      | RETURN ';'
   56      | Selection AFF Expr ';'
   57      | IF Expr THEN Instr ELSE Instr

   58 LInstrOpt: LInstr
   59          | /* empty */

   60 LInstr: Instr LInstr
   61       | Instr

   62 BlocOpt: Bloc
   63        | /* empty */

   64 Bloc: '{' Contenu '}'

   65 BlocObj: '{' LDeclChampMethodOpt '}'

   66 LDeclChampMethodOpt: LDeclChampMethod
   67                    | /* empty */

   68 LDeclChampMethod: LDeclChampMethod DeclChampMethod
   69                 | DeclChampMethod

   70 DeclChampMethod: DeclChamp
   71                | DeclMethode

   72 Contenu: LInstrOpt
   73        | LDeclChamp IS LInstr

   74 Envoi: Expr '.' MethodeC

   75 MethodeC: Id '(' LExprOpt ')'

   76 Selection: Expr '.' Id
   77          | Id
   78          | THIS
   79          | SUPER
   80          | RESULT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 25 26 31 34 35 37 75
')' (41) 6 25 26 31 34 35 37 75
',' (44) 10 43
'.' (46) 74 76
':' (58) 12 13 18 25 27
';' (59) 18 53 55 56
'{' (123) 64 65
'}' (125) 64 65
error (256)
IS (258) 6 7 26 73
CLASS (259) 2
VAR (260) 12 18
EXTENDS (261) 31
DEF (262) 25 26
OVERRIDE (263) 29
RETURN (264) 55
AS (265)
IF (266) 57
THEN (267) 57
ELSE (268) 57
AFF (269) 14 23 25 56
NEWC (270) 37
VOIDC (271) 21
INTC (272) 19
STRINGC (273) 20
THIS (274) 78
SUPER (275) 79
RESULT (276) 80
ADD (277) 45 50
SUB (278) 46 49
MUL (279) 47
DIV (280) 48
CONCAT (281) 51
OBJECT (282) 7
Id (283) 12 13 18 25 26 75 76 77
Classname (284) 2 7 22 31 37
Cste (285) 33
RelOp (286) 52
UNARY (287)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
Prog (42)
    on left: 1, on right: 0
classTete (43)
    on left: 2, on right: 6
classLOpt (44)
    on left: 3 4, on right: 1 3
Class (45)
    on left: 5 6, on right: 3
Objet (46)
    on left: 7, on right: 5
LParamOpt (47)
    on left: 8 9, on right: 6 25 26
LParam (48)
    on left: 10 11, on right: 8 10
Param (49)
    on left: 12 13, on right: 10 11
ValVar (50)
    on left: 14 15, on right: 12 13
LDeclChamp (51)
    on left: 16 17, on right: 16 73
DeclChamp (52)
    on left: 18, on right: 16 17 70
TypeC (53)
    on left: 19 20 21 22, on right: 12 13 18 25 27 35 40
AffOpt (54)
    on left: 23 24, on right: 18
DeclMethode (55)
    on left: 25 26, on right: 71
TypeCOpt (56)
    on left: 27 28, on right: 26
OverrideOpt (57)
    on left: 29 30, on right: 25 26
ExtendsOpt (58)
    on left: 31 32, on right: 6
Expr (59)
    on left: 33 34 35 36 37 38 39 40, on right: 14 23 25 34 35 43 44
    45 46 47 48 49 50 51 52 53 56 57 74 76
LExprOpt (60)
    on left: 41 42, on right: 31 37 75
LExpr (61)
    on left: 43 44, on right: 41 43
ExprOperateur (62)
    on left: 45 46 47 48 49 50 51 52, on right: 39
Instr (63)
    on left: 53 54 55 56 57, on right: 57 60 61
LInstrOpt (64)
    on left: 58 59, on right: 72
LInstr (65)
    on left: 60 61, on right: 58 60 73
BlocOpt (66)
    on left: 62 63, on right: 6
Bloc (67)
    on left: 64, on right: 1 26 54 62
BlocObj (68)
    on left: 65, on right: 6 7
LDeclChampMethodOpt (69)
    on left: 66 67, on right: 65
LDeclChampMethod (70)
    on left: 68 69, on right: 66 68
DeclChampMethod (71)
    on left: 70 71, on right: 68 69
Contenu (72)
    on left: 72 73, on right: 64
Envoi (73)
    on left: 74, on right: 38
MethodeC (74)
    on left: 75, on right: 74
Selection (75)
    on left: 76 77 78 79 80, on right: 36 56


state 0

    0 $accept: . Prog $end

    CLASS   shift, and go to state 1
    OBJECT  shift, and go to state 2

    $default  reduce using rule 4 (classLOpt)

    Prog       go to state 3
    classTete  go to state 4
    classLOpt  go to state 5
    Class      go to state 6
    Objet      go to state 7


state 1

    2 classTete: CLASS . Classname

    Classname  shift, and go to state 8


state 2

    7 Objet: OBJECT . Classname IS BlocObj

    Classname  shift, and go to state 9


state 3

    0 $accept: Prog . $end

    $end  shift, and go to state 10


state 4

    6 Class: classTete . '(' LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj

    '('  shift, and go to state 11


state 5

    1 Prog: classLOpt . Bloc

    '{'  shift, and go to state 12

    Bloc  go to state 13


state 6

    3 classLOpt: Class . classLOpt

    CLASS   shift, and go to state 1
    OBJECT  shift, and go to state 2

    $default  reduce using rule 4 (classLOpt)

    classTete  go to state 4
    classLOpt  go to state 14
    Class      go to state 6
    Objet      go to state 7


state 7

    5 Class: Objet .

    $default  reduce using rule 5 (Class)


state 8

    2 classTete: CLASS Classname .

    $default  reduce using rule 2 (classTete)


state 9

    7 Objet: OBJECT Classname . IS BlocObj

    IS  shift, and go to state 15


state 10

    0 $accept: Prog $end .

    $default  accept


state 11

    6 Class: classTete '(' . LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj

    VAR  shift, and go to state 16
    Id   shift, and go to state 17

    $default  reduce using rule 9 (LParamOpt)

    LParamOpt  go to state 18
    LParam     go to state 19
    Param      go to state 20


state 12

   64 Bloc: '{' . Contenu '}'

    VAR        shift, and go to state 21
    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36
    '{'        shift, and go to state 12

    $default  reduce using rule 59 (LInstrOpt)

    LDeclChamp     go to state 37
    DeclChamp      go to state 38
    TypeC          go to state 39
    Expr           go to state 40
    ExprOperateur  go to state 41
    Instr          go to state 42
    LInstrOpt      go to state 43
    LInstr         go to state 44
    Bloc           go to state 45
    Contenu        go to state 46
    Envoi          go to state 47
    Selection      go to state 48


state 13

    1 Prog: classLOpt Bloc .

    $default  reduce using rule 1 (Prog)


state 14

    3 classLOpt: Class classLOpt .

    $default  reduce using rule 3 (classLOpt)


state 15

    7 Objet: OBJECT Classname IS . BlocObj

    '{'  shift, and go to state 49

    BlocObj  go to state 50


state 16

   12 Param: VAR . Id ':' TypeC ValVar

    Id  shift, and go to state 51


state 17

   13 Param: Id . ':' TypeC ValVar

    ':'  shift, and go to state 52


state 18

    6 Class: classTete '(' LParamOpt . ')' ExtendsOpt BlocOpt IS BlocObj

    ')'  shift, and go to state 53


state 19

    8 LParamOpt: LParam .

    $default  reduce using rule 8 (LParamOpt)


state 20

   10 LParam: Param . ',' LParam
   11       | Param .

    ','  shift, and go to state 54

    $default  reduce using rule 11 (LParam)


state 21

   18 DeclChamp: VAR . Id ':' TypeC AffOpt ';'

    Id  shift, and go to state 55


state 22

   55 Instr: RETURN . ';'

    ';'  shift, and go to state 56


state 23

   57 Instr: IF . Expr THEN Instr ELSE Instr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 57
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 24

   37 Expr: NEWC . Classname '(' LExprOpt ')'

    Classname  shift, and go to state 59


state 25

   21 TypeC: VOIDC .

    $default  reduce using rule 21 (TypeC)


state 26

   19 TypeC: INTC .

    $default  reduce using rule 19 (TypeC)


state 27

   20 TypeC: STRINGC .

    $default  reduce using rule 20 (TypeC)


state 28

   78 Selection: THIS .

    $default  reduce using rule 78 (Selection)


state 29

   79 Selection: SUPER .

    $default  reduce using rule 79 (Selection)


state 30

   80 Selection: RESULT .

    $default  reduce using rule 80 (Selection)


state 31

   50 ExprOperateur: ADD . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 60
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 32

   49 ExprOperateur: SUB . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 61
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 33

   77 Selection: Id .

    $default  reduce using rule 77 (Selection)


state 34

   22 TypeC: Classname .

    $default  reduce using rule 22 (TypeC)


state 35

   33 Expr: Cste .

    $default  reduce using rule 33 (Expr)


state 36

   34 Expr: '(' . Expr ')'
   35     | '(' . TypeC Expr ')'

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 62
    Expr           go to state 63
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 37

   73 Contenu: LDeclChamp . IS LInstr

    IS  shift, and go to state 64


state 38

   16 LDeclChamp: DeclChamp . LDeclChamp
   17           | DeclChamp .

    VAR  shift, and go to state 21

    $default  reduce using rule 17 (LDeclChamp)

    LDeclChamp  go to state 65
    DeclChamp   go to state 38


state 39

   40 Expr: TypeC .

    $default  reduce using rule 40 (Expr)


state 40

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   53 Instr: Expr . ';'
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ';'     shift, and go to state 73


state 41

   39 Expr: ExprOperateur .

    $default  reduce using rule 39 (Expr)


state 42

   60 LInstr: Instr . LInstr
   61       | Instr .

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36
    '{'        shift, and go to state 12

    $default  reduce using rule 61 (LInstr)

    TypeC          go to state 39
    Expr           go to state 40
    ExprOperateur  go to state 41
    Instr          go to state 42
    LInstr         go to state 74
    Bloc           go to state 45
    Envoi          go to state 47
    Selection      go to state 48


state 43

   72 Contenu: LInstrOpt .

    $default  reduce using rule 72 (Contenu)


state 44

   58 LInstrOpt: LInstr .

    $default  reduce using rule 58 (LInstrOpt)


state 45

   54 Instr: Bloc .

    $default  reduce using rule 54 (Instr)


state 46

   64 Bloc: '{' Contenu . '}'

    '}'  shift, and go to state 75


state 47

   38 Expr: Envoi .

    $default  reduce using rule 38 (Expr)


state 48

   36 Expr: Selection .
   56 Instr: Selection . AFF Expr ';'

    AFF  shift, and go to state 76

    $default  reduce using rule 36 (Expr)


state 49

   65 BlocObj: '{' . LDeclChampMethodOpt '}'

    VAR       shift, and go to state 21
    OVERRIDE  shift, and go to state 77

    '}'       reduce using rule 67 (LDeclChampMethodOpt)
    $default  reduce using rule 30 (OverrideOpt)

    DeclChamp            go to state 78
    DeclMethode          go to state 79
    OverrideOpt          go to state 80
    LDeclChampMethodOpt  go to state 81
    LDeclChampMethod     go to state 82
    DeclChampMethod      go to state 83


state 50

    7 Objet: OBJECT Classname IS BlocObj .

    $default  reduce using rule 7 (Objet)


state 51

   12 Param: VAR Id . ':' TypeC ValVar

    ':'  shift, and go to state 84


state 52

   13 Param: Id ':' . TypeC ValVar

    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    Classname  shift, and go to state 34

    TypeC  go to state 85


state 53

    6 Class: classTete '(' LParamOpt ')' . ExtendsOpt BlocOpt IS BlocObj

    EXTENDS  shift, and go to state 86

    $default  reduce using rule 32 (ExtendsOpt)

    ExtendsOpt  go to state 87


state 54

   10 LParam: Param ',' . LParam

    VAR  shift, and go to state 16
    Id   shift, and go to state 17

    LParam  go to state 88
    Param   go to state 20


state 55

   18 DeclChamp: VAR Id . ':' TypeC AffOpt ';'

    ':'  shift, and go to state 89


state 56

   55 Instr: RETURN ';' .

    $default  reduce using rule 55 (Instr)


state 57

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   57 Instr: IF Expr . THEN Instr ELSE Instr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    THEN    shift, and go to state 90
    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72


state 58

   36 Expr: Selection .

    $default  reduce using rule 36 (Expr)


state 59

   37 Expr: NEWC Classname . '(' LExprOpt ')'

    '('  shift, and go to state 91


state 60

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   50              | ADD Expr .
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    '.'  shift, and go to state 72

    $default  reduce using rule 50 (ExprOperateur)


state 61

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   49              | SUB Expr .
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    '.'  shift, and go to state 72

    $default  reduce using rule 49 (ExprOperateur)


state 62

   35 Expr: '(' TypeC . Expr ')'
   40     | TypeC .

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    ADD       [reduce using rule 40 (Expr)]
    SUB       [reduce using rule 40 (Expr)]
    $default  reduce using rule 40 (Expr)

    TypeC          go to state 39
    Expr           go to state 92
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 63

   34 Expr: '(' Expr . ')'
   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ')'     shift, and go to state 93


state 64

   73 Contenu: LDeclChamp IS . LInstr

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36
    '{'        shift, and go to state 12

    TypeC          go to state 39
    Expr           go to state 40
    ExprOperateur  go to state 41
    Instr          go to state 42
    LInstr         go to state 94
    Bloc           go to state 45
    Envoi          go to state 47
    Selection      go to state 48


state 65

   16 LDeclChamp: DeclChamp LDeclChamp .

    $default  reduce using rule 16 (LDeclChamp)


state 66

   45 ExprOperateur: Expr ADD . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 95
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 67

   46 ExprOperateur: Expr SUB . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 96
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 68

   47 ExprOperateur: Expr MUL . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 97
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 69

   48 ExprOperateur: Expr DIV . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 98
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 70

   51 ExprOperateur: Expr CONCAT . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 99
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 71

   52 ExprOperateur: Expr RelOp . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 100
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 72

   74 Envoi: Expr '.' . MethodeC
   76 Selection: Expr '.' . Id

    Id  shift, and go to state 101

    MethodeC  go to state 102


state 73

   53 Instr: Expr ';' .

    $default  reduce using rule 53 (Instr)


state 74

   60 LInstr: Instr LInstr .

    $default  reduce using rule 60 (LInstr)


state 75

   64 Bloc: '{' Contenu '}' .

    $default  reduce using rule 64 (Bloc)


state 76

   56 Instr: Selection AFF . Expr ';'

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 103
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 77

   29 OverrideOpt: OVERRIDE .

    $default  reduce using rule 29 (OverrideOpt)


state 78

   70 DeclChampMethod: DeclChamp .

    $default  reduce using rule 70 (DeclChampMethod)


state 79

   71 DeclChampMethod: DeclMethode .

    $default  reduce using rule 71 (DeclChampMethod)


state 80

   25 DeclMethode: OverrideOpt . DEF Id '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt . DEF Id '(' LParamOpt ')' TypeCOpt IS Bloc

    DEF  shift, and go to state 104


state 81

   65 BlocObj: '{' LDeclChampMethodOpt . '}'

    '}'  shift, and go to state 105


state 82

   66 LDeclChampMethodOpt: LDeclChampMethod .
   68 LDeclChampMethod: LDeclChampMethod . DeclChampMethod

    VAR       shift, and go to state 21
    OVERRIDE  shift, and go to state 77

    '}'       reduce using rule 66 (LDeclChampMethodOpt)
    $default  reduce using rule 30 (OverrideOpt)

    DeclChamp        go to state 78
    DeclMethode      go to state 79
    OverrideOpt      go to state 80
    DeclChampMethod  go to state 106


state 83

   69 LDeclChampMethod: DeclChampMethod .

    $default  reduce using rule 69 (LDeclChampMethod)


state 84

   12 Param: VAR Id ':' . TypeC ValVar

    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    Classname  shift, and go to state 34

    TypeC  go to state 107


state 85

   13 Param: Id ':' TypeC . ValVar

    AFF  shift, and go to state 108

    $default  reduce using rule 15 (ValVar)

    ValVar  go to state 109


state 86

   31 ExtendsOpt: EXTENDS . Classname '(' LExprOpt ')'

    Classname  shift, and go to state 110


state 87

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt . BlocOpt IS BlocObj

    '{'  shift, and go to state 12

    $default  reduce using rule 63 (BlocOpt)

    BlocOpt  go to state 111
    Bloc     go to state 112


state 88

   10 LParam: Param ',' LParam .

    $default  reduce using rule 10 (LParam)


state 89

   18 DeclChamp: VAR Id ':' . TypeC AffOpt ';'

    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    Classname  shift, and go to state 34

    TypeC  go to state 113


state 90

   57 Instr: IF Expr THEN . Instr ELSE Instr

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36
    '{'        shift, and go to state 12

    TypeC          go to state 39
    Expr           go to state 40
    ExprOperateur  go to state 41
    Instr          go to state 114
    Bloc           go to state 45
    Envoi          go to state 47
    Selection      go to state 48


state 91

   37 Expr: NEWC Classname '(' . LExprOpt ')'

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    $default  reduce using rule 42 (LExprOpt)

    TypeC          go to state 39
    Expr           go to state 115
    LExprOpt       go to state 116
    LExpr          go to state 117
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 92

   35 Expr: '(' TypeC Expr . ')'
   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ')'     shift, and go to state 118


state 93

   34 Expr: '(' Expr ')' .

    $default  reduce using rule 34 (Expr)


state 94

   73 Contenu: LDeclChamp IS LInstr .

    $default  reduce using rule 73 (Contenu)


state 95

   45 ExprOperateur: Expr . ADD Expr
   45              | Expr ADD Expr .
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 45 (ExprOperateur)


state 96

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   46              | Expr SUB Expr .
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 46 (ExprOperateur)


state 97

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   47              | Expr MUL Expr .
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 47 (ExprOperateur)


state 98

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   48              | Expr DIV Expr .
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 48 (ExprOperateur)


state 99

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   51              | Expr CONCAT Expr .
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    '.'  shift, and go to state 72

    $default  reduce using rule 51 (ExprOperateur)


state 100

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   52              | Expr RelOp Expr .
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    RelOp  error (nonassociative)

    $default  reduce using rule 52 (ExprOperateur)


state 101

   75 MethodeC: Id . '(' LExprOpt ')'
   76 Selection: Expr '.' Id .

    '('  shift, and go to state 119

    $default  reduce using rule 76 (Selection)


state 102

   74 Envoi: Expr '.' MethodeC .

    $default  reduce using rule 74 (Envoi)


state 103

   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   56 Instr: Selection AFF Expr . ';'
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ';'     shift, and go to state 120


state 104

   25 DeclMethode: OverrideOpt DEF . Id '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF . Id '(' LParamOpt ')' TypeCOpt IS Bloc

    Id  shift, and go to state 121


state 105

   65 BlocObj: '{' LDeclChampMethodOpt '}' .

    $default  reduce using rule 65 (BlocObj)


state 106

   68 LDeclChampMethod: LDeclChampMethod DeclChampMethod .

    $default  reduce using rule 68 (LDeclChampMethod)


state 107

   12 Param: VAR Id ':' TypeC . ValVar

    AFF  shift, and go to state 108

    $default  reduce using rule 15 (ValVar)

    ValVar  go to state 122


state 108

   14 ValVar: AFF . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 123
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 109

   13 Param: Id ':' TypeC ValVar .

    $default  reduce using rule 13 (Param)


state 110

   31 ExtendsOpt: EXTENDS Classname . '(' LExprOpt ')'

    '('  shift, and go to state 124


state 111

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt BlocOpt . IS BlocObj

    IS  shift, and go to state 125


state 112

   62 BlocOpt: Bloc .

    $default  reduce using rule 62 (BlocOpt)


state 113

   18 DeclChamp: VAR Id ':' TypeC . AffOpt ';'

    AFF  shift, and go to state 126

    $default  reduce using rule 24 (AffOpt)

    AffOpt  go to state 127


state 114

   57 Instr: IF Expr THEN Instr . ELSE Instr

    ELSE  shift, and go to state 128


state 115

   43 LExpr: Expr . ',' LExpr
   44      | Expr .
   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ','     shift, and go to state 129

    $default  reduce using rule 44 (LExpr)


state 116

   37 Expr: NEWC Classname '(' LExprOpt . ')'

    ')'  shift, and go to state 130


state 117

   41 LExprOpt: LExpr .

    $default  reduce using rule 41 (LExprOpt)


state 118

   35 Expr: '(' TypeC Expr ')' .

    $default  reduce using rule 35 (Expr)


state 119

   75 MethodeC: Id '(' . LExprOpt ')'

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    $default  reduce using rule 42 (LExprOpt)

    TypeC          go to state 39
    Expr           go to state 115
    LExprOpt       go to state 131
    LExpr          go to state 117
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 120

   56 Instr: Selection AFF Expr ';' .

    $default  reduce using rule 56 (Instr)


state 121

   25 DeclMethode: OverrideOpt DEF Id . '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id . '(' LParamOpt ')' TypeCOpt IS Bloc

    '('  shift, and go to state 132


state 122

   12 Param: VAR Id ':' TypeC ValVar .

    $default  reduce using rule 12 (Param)


state 123

   14 ValVar: AFF Expr .
   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72

    $default  reduce using rule 14 (ValVar)


state 124

   31 ExtendsOpt: EXTENDS Classname '(' . LExprOpt ')'

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    $default  reduce using rule 42 (LExprOpt)

    TypeC          go to state 39
    Expr           go to state 115
    LExprOpt       go to state 133
    LExpr          go to state 117
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 125

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt BlocOpt IS . BlocObj

    '{'  shift, and go to state 49

    BlocObj  go to state 134


state 126

   23 AffOpt: AFF . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 135
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 127

   18 DeclChamp: VAR Id ':' TypeC AffOpt . ';'

    ';'  shift, and go to state 136


state 128

   57 Instr: IF Expr THEN Instr ELSE . Instr

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36
    '{'        shift, and go to state 12

    TypeC          go to state 39
    Expr           go to state 40
    ExprOperateur  go to state 41
    Instr          go to state 137
    Bloc           go to state 45
    Envoi          go to state 47
    Selection      go to state 48


state 129

   43 LExpr: Expr ',' . LExpr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 115
    LExpr          go to state 138
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 130

   37 Expr: NEWC Classname '(' LExprOpt ')' .

    $default  reduce using rule 37 (Expr)


state 131

   75 MethodeC: Id '(' LExprOpt . ')'

    ')'  shift, and go to state 139


state 132

   25 DeclMethode: OverrideOpt DEF Id '(' . LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' . LParamOpt ')' TypeCOpt IS Bloc

    VAR  shift, and go to state 16
    Id   shift, and go to state 17

    $default  reduce using rule 9 (LParamOpt)

    LParamOpt  go to state 140
    LParam     go to state 19
    Param      go to state 20


state 133

   31 ExtendsOpt: EXTENDS Classname '(' LExprOpt . ')'

    ')'  shift, and go to state 141


state 134

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj .

    $default  reduce using rule 6 (Class)


state 135

   23 AffOpt: AFF Expr .
   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72

    $default  reduce using rule 23 (AffOpt)


state 136

   18 DeclChamp: VAR Id ':' TypeC AffOpt ';' .

    $default  reduce using rule 18 (DeclChamp)


state 137

   57 Instr: IF Expr THEN Instr ELSE Instr .

    $default  reduce using rule 57 (Instr)


state 138

   43 LExpr: Expr ',' LExpr .

    $default  reduce using rule 43 (LExpr)


state 139

   75 MethodeC: Id '(' LExprOpt ')' .

    $default  reduce using rule 75 (MethodeC)


state 140

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt . ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' LParamOpt . ')' TypeCOpt IS Bloc

    ')'  shift, and go to state 142


state 141

   31 ExtendsOpt: EXTENDS Classname '(' LExprOpt ')' .

    $default  reduce using rule 31 (ExtendsOpt)


state 142

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' . ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' LParamOpt ')' . TypeCOpt IS Bloc

    ':'  shift, and go to state 143

    $default  reduce using rule 28 (TypeCOpt)

    TypeCOpt  go to state 144


state 143

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' . TypeC AFF Expr
   27 TypeCOpt: ':' . TypeC

    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    Classname  shift, and go to state 34

    TypeC  go to state 145


state 144

   26 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt . IS Bloc

    IS  shift, and go to state 146


state 145

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC . AFF Expr
   27 TypeCOpt: ':' TypeC .

    AFF  shift, and go to state 147

    $default  reduce using rule 27 (TypeCOpt)


state 146

   26 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt IS . Bloc

    '{'  shift, and go to state 12

    Bloc  go to state 148


state 147

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC AFF . Expr

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 25
    INTC       shift, and go to state 26
    STRINGC    shift, and go to state 27
    THIS       shift, and go to state 28
    SUPER      shift, and go to state 29
    RESULT     shift, and go to state 30
    ADD        shift, and go to state 31
    SUB        shift, and go to state 32
    Id         shift, and go to state 33
    Classname  shift, and go to state 34
    Cste       shift, and go to state 35
    '('        shift, and go to state 36

    TypeC          go to state 39
    Expr           go to state 149
    ExprOperateur  go to state 41
    Envoi          go to state 47
    Selection      go to state 58


state 148

   26 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt IS Bloc .

    $default  reduce using rule 26 (DeclMethode)


state 149

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC AFF Expr .
   45 ExprOperateur: Expr . ADD Expr
   46              | Expr . SUB Expr
   47              | Expr . MUL Expr
   48              | Expr . DIV Expr
   51              | Expr . CONCAT Expr
   52              | Expr . RelOp Expr
   74 Envoi: Expr . '.' MethodeC
   76 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72

    $default  reduce using rule 25 (DeclMethode)
