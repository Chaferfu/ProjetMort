Terminals which are not used

   AS


State 61 conflicts: 2 reduce/reduce


Grammar

    0 $accept: Prog $end

    1 Prog: classLOpt Bloc

    2 classTete: CLASS Classname

    3 classLOpt: Class classLOpt
    4          | /* empty */

    5 Class: Objet
    6      | classTete '(' LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj

    7 Objet: OBJECT Classname IS BlocObj

    8 LParamOpt: LParam
    9          | /* empty */

   10 LParam: Param ',' LParam
   11       | Param

   12 Param: VAR Id ':' TypeC ValVar
   13      | Id ':' TypeC ValVar

   14 ValVar: AFF Expr
   15       | /* empty */

   16 LDeclChamp: DeclChamp LDeclChamp
   17           | DeclChamp

   18 DeclChamp: VAR Id ':' TypeC AffOpt ';'

   19 TypeC: INTC
   20      | STRINGC
   21      | VOIDC
   22      | Classname

   23 AffOpt: AFF Expr
   24       | /* empty */

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt IS Bloc

   27 TypeCOpt: ':' TypeC
   28         | /* empty */

   29 OverrideOpt: OVERRIDE
   30            | /* empty */

   31 ExtendsOpt: EXTENDS Classname '(' LExprOpt ')'
   32           | /* empty */

   33 Expr: Cste
   34     | '(' Expr ')'
   35     | Selection
   36     | NEWC Classname '(' LExprOpt ')'
   37     | ExprOperateur
   38     | Envoi
   39     | Classname

   40 LExprOpt: LExpr
   41         | /* empty */

   42 LExpr: Expr ',' LExpr
   43      | Expr

   44 ExprOperateur: Expr ADD Expr
   45              | Expr SUB Expr
   46              | Expr MUL Expr
   47              | Expr DIV Expr
   48              | SUB Expr
   49              | ADD Expr
   50              | Expr CONCAT Expr
   51              | Expr RelOp Expr

   52 Instr: Expr ';'
   53      | Bloc
   54      | RETURN ';'
   55      | Selection AFF Expr ';'
   56      | IF Expr THEN Instr ELSE Instr

   57 LInstrOpt: LInstr
   58          | /* empty */

   59 LInstr: Instr LInstr
   60       | Instr

   61 BlocOpt: Bloc
   62        | /* empty */

   63 Bloc: '{' Contenu '}'

   64 BlocObj: '{' LDeclChampMethodOpt '}'

   65 LDeclChampMethodOpt: LDeclChampMethod
   66                    | /* empty */

   67 LDeclChampMethod: LDeclChampMethod DeclChampMethod
   68                 | DeclChampMethod

   69 DeclChampMethod: DeclChamp
   70                | DeclMethode

   71 Contenu: LInstrOpt
   72        | LDeclChamp IS LInstr

   73 Envoi: Expr '.' MethodeC

   74 MethodeC: Id '(' LExprOpt ')'

   75 Selection: Expr '.' Id
   76          | Id
   77          | THIS
   78          | SUPER
   79          | RESULT
   80          | '(' TypeC Expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 25 26 31 34 36 74 80
')' (41) 6 25 26 31 34 36 74 80
',' (44) 10 42
'.' (46) 73 75
':' (58) 12 13 18 25 27
';' (59) 18 52 54 55
'{' (123) 63 64
'}' (125) 63 64
error (256)
IS (258) 6 7 26 72
CLASS (259) 2
VAR (260) 12 18
EXTENDS (261) 31
DEF (262) 25 26
OVERRIDE (263) 29
RETURN (264) 54
AS (265)
IF (266) 56
THEN (267) 56
ELSE (268) 56
AFF (269) 14 23 25 55
NEWC (270) 36
VOIDC (271) 21
INTC (272) 19
STRINGC (273) 20
THIS (274) 77
SUPER (275) 78
RESULT (276) 79
ADD (277) 44 49
SUB (278) 45 48
MUL (279) 46
DIV (280) 47
CONCAT (281) 50
OBJECT (282) 7
Id (283) 12 13 18 25 26 74 75 76
Classname (284) 2 7 22 31 36 39
Cste (285) 33
RelOp (286) 51
UNARY (287)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
Prog (42)
    on left: 1, on right: 0
classTete (43)
    on left: 2, on right: 6
classLOpt (44)
    on left: 3 4, on right: 1 3
Class (45)
    on left: 5 6, on right: 3
Objet (46)
    on left: 7, on right: 5
LParamOpt (47)
    on left: 8 9, on right: 6 25 26
LParam (48)
    on left: 10 11, on right: 8 10
Param (49)
    on left: 12 13, on right: 10 11
ValVar (50)
    on left: 14 15, on right: 12 13
LDeclChamp (51)
    on left: 16 17, on right: 16 72
DeclChamp (52)
    on left: 18, on right: 16 17 69
TypeC (53)
    on left: 19 20 21 22, on right: 12 13 18 25 27 80
AffOpt (54)
    on left: 23 24, on right: 18
DeclMethode (55)
    on left: 25 26, on right: 70
TypeCOpt (56)
    on left: 27 28, on right: 26
OverrideOpt (57)
    on left: 29 30, on right: 25 26
ExtendsOpt (58)
    on left: 31 32, on right: 6
Expr (59)
    on left: 33 34 35 36 37 38 39, on right: 14 23 25 34 42 43 44 45
    46 47 48 49 50 51 52 55 56 73 75 80
LExprOpt (60)
    on left: 40 41, on right: 31 36 74
LExpr (61)
    on left: 42 43, on right: 40 42
ExprOperateur (62)
    on left: 44 45 46 47 48 49 50 51, on right: 37
Instr (63)
    on left: 52 53 54 55 56, on right: 56 59 60
LInstrOpt (64)
    on left: 57 58, on right: 71
LInstr (65)
    on left: 59 60, on right: 57 59 72
BlocOpt (66)
    on left: 61 62, on right: 6
Bloc (67)
    on left: 63, on right: 1 26 53 61
BlocObj (68)
    on left: 64, on right: 6 7
LDeclChampMethodOpt (69)
    on left: 65 66, on right: 64
LDeclChampMethod (70)
    on left: 67 68, on right: 65 67
DeclChampMethod (71)
    on left: 69 70, on right: 67 68
Contenu (72)
    on left: 71 72, on right: 63
Envoi (73)
    on left: 73, on right: 38
MethodeC (74)
    on left: 74, on right: 73
Selection (75)
    on left: 75 76 77 78 79 80, on right: 35 55


state 0

    0 $accept: . Prog $end

    CLASS   shift, and go to state 1
    OBJECT  shift, and go to state 2

    $default  reduce using rule 4 (classLOpt)

    Prog       go to state 3
    classTete  go to state 4
    classLOpt  go to state 5
    Class      go to state 6
    Objet      go to state 7


state 1

    2 classTete: CLASS . Classname

    Classname  shift, and go to state 8


state 2

    7 Objet: OBJECT . Classname IS BlocObj

    Classname  shift, and go to state 9


state 3

    0 $accept: Prog . $end

    $end  shift, and go to state 10


state 4

    6 Class: classTete . '(' LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj

    '('  shift, and go to state 11


state 5

    1 Prog: classLOpt . Bloc

    '{'  shift, and go to state 12

    Bloc  go to state 13


state 6

    3 classLOpt: Class . classLOpt

    CLASS   shift, and go to state 1
    OBJECT  shift, and go to state 2

    $default  reduce using rule 4 (classLOpt)

    classTete  go to state 4
    classLOpt  go to state 14
    Class      go to state 6
    Objet      go to state 7


state 7

    5 Class: Objet .

    $default  reduce using rule 5 (Class)


state 8

    2 classTete: CLASS Classname .

    $default  reduce using rule 2 (classTete)


state 9

    7 Objet: OBJECT Classname . IS BlocObj

    IS  shift, and go to state 15


state 10

    0 $accept: Prog $end .

    $default  accept


state 11

    6 Class: classTete '(' . LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj

    VAR  shift, and go to state 16
    Id   shift, and go to state 17

    $default  reduce using rule 9 (LParamOpt)

    LParamOpt  go to state 18
    LParam     go to state 19
    Param      go to state 20


state 12

   63 Bloc: '{' . Contenu '}'

    VAR        shift, and go to state 21
    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33
    '{'        shift, and go to state 12

    $default  reduce using rule 58 (LInstrOpt)

    LDeclChamp     go to state 34
    DeclChamp      go to state 35
    Expr           go to state 36
    ExprOperateur  go to state 37
    Instr          go to state 38
    LInstrOpt      go to state 39
    LInstr         go to state 40
    Bloc           go to state 41
    Contenu        go to state 42
    Envoi          go to state 43
    Selection      go to state 44


state 13

    1 Prog: classLOpt Bloc .

    $default  reduce using rule 1 (Prog)


state 14

    3 classLOpt: Class classLOpt .

    $default  reduce using rule 3 (classLOpt)


state 15

    7 Objet: OBJECT Classname IS . BlocObj

    '{'  shift, and go to state 45

    BlocObj  go to state 46


state 16

   12 Param: VAR . Id ':' TypeC ValVar

    Id  shift, and go to state 47


state 17

   13 Param: Id . ':' TypeC ValVar

    ':'  shift, and go to state 48


state 18

    6 Class: classTete '(' LParamOpt . ')' ExtendsOpt BlocOpt IS BlocObj

    ')'  shift, and go to state 49


state 19

    8 LParamOpt: LParam .

    $default  reduce using rule 8 (LParamOpt)


state 20

   10 LParam: Param . ',' LParam
   11       | Param .

    ','  shift, and go to state 50

    $default  reduce using rule 11 (LParam)


state 21

   18 DeclChamp: VAR . Id ':' TypeC AffOpt ';'

    Id  shift, and go to state 51


state 22

   54 Instr: RETURN . ';'

    ';'  shift, and go to state 52


state 23

   56 Instr: IF . Expr THEN Instr ELSE Instr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 53
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 24

   36 Expr: NEWC . Classname '(' LExprOpt ')'

    Classname  shift, and go to state 55


state 25

   77 Selection: THIS .

    $default  reduce using rule 77 (Selection)


state 26

   78 Selection: SUPER .

    $default  reduce using rule 78 (Selection)


state 27

   79 Selection: RESULT .

    $default  reduce using rule 79 (Selection)


state 28

   49 ExprOperateur: ADD . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 56
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 29

   48 ExprOperateur: SUB . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 57
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 30

   76 Selection: Id .

    $default  reduce using rule 76 (Selection)


state 31

   39 Expr: Classname .

    $default  reduce using rule 39 (Expr)


state 32

   33 Expr: Cste .

    $default  reduce using rule 33 (Expr)


state 33

   34 Expr: '(' . Expr ')'
   80 Selection: '(' . TypeC Expr ')'

    NEWC       shift, and go to state 24
    VOIDC      shift, and go to state 58
    INTC       shift, and go to state 59
    STRINGC    shift, and go to state 60
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 61
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    TypeC          go to state 62
    Expr           go to state 63
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 34

   72 Contenu: LDeclChamp . IS LInstr

    IS  shift, and go to state 64


state 35

   16 LDeclChamp: DeclChamp . LDeclChamp
   17           | DeclChamp .

    VAR  shift, and go to state 21

    $default  reduce using rule 17 (LDeclChamp)

    LDeclChamp  go to state 65
    DeclChamp   go to state 35


state 36

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   52 Instr: Expr . ';'
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ';'     shift, and go to state 73


state 37

   37 Expr: ExprOperateur .

    $default  reduce using rule 37 (Expr)


state 38

   59 LInstr: Instr . LInstr
   60       | Instr .

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33
    '{'        shift, and go to state 12

    $default  reduce using rule 60 (LInstr)

    Expr           go to state 36
    ExprOperateur  go to state 37
    Instr          go to state 38
    LInstr         go to state 74
    Bloc           go to state 41
    Envoi          go to state 43
    Selection      go to state 44


state 39

   71 Contenu: LInstrOpt .

    $default  reduce using rule 71 (Contenu)


state 40

   57 LInstrOpt: LInstr .

    $default  reduce using rule 57 (LInstrOpt)


state 41

   53 Instr: Bloc .

    $default  reduce using rule 53 (Instr)


state 42

   63 Bloc: '{' Contenu . '}'

    '}'  shift, and go to state 75


state 43

   38 Expr: Envoi .

    $default  reduce using rule 38 (Expr)


state 44

   35 Expr: Selection .
   55 Instr: Selection . AFF Expr ';'

    AFF  shift, and go to state 76

    $default  reduce using rule 35 (Expr)


state 45

   64 BlocObj: '{' . LDeclChampMethodOpt '}'

    VAR       shift, and go to state 21
    OVERRIDE  shift, and go to state 77

    '}'       reduce using rule 66 (LDeclChampMethodOpt)
    $default  reduce using rule 30 (OverrideOpt)

    DeclChamp            go to state 78
    DeclMethode          go to state 79
    OverrideOpt          go to state 80
    LDeclChampMethodOpt  go to state 81
    LDeclChampMethod     go to state 82
    DeclChampMethod      go to state 83


state 46

    7 Objet: OBJECT Classname IS BlocObj .

    $default  reduce using rule 7 (Objet)


state 47

   12 Param: VAR Id . ':' TypeC ValVar

    ':'  shift, and go to state 84


state 48

   13 Param: Id ':' . TypeC ValVar

    VOIDC      shift, and go to state 58
    INTC       shift, and go to state 59
    STRINGC    shift, and go to state 60
    Classname  shift, and go to state 85

    TypeC  go to state 86


state 49

    6 Class: classTete '(' LParamOpt ')' . ExtendsOpt BlocOpt IS BlocObj

    EXTENDS  shift, and go to state 87

    $default  reduce using rule 32 (ExtendsOpt)

    ExtendsOpt  go to state 88


state 50

   10 LParam: Param ',' . LParam

    VAR  shift, and go to state 16
    Id   shift, and go to state 17

    LParam  go to state 89
    Param   go to state 20


state 51

   18 DeclChamp: VAR Id . ':' TypeC AffOpt ';'

    ':'  shift, and go to state 90


state 52

   54 Instr: RETURN ';' .

    $default  reduce using rule 54 (Instr)


state 53

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   56 Instr: IF Expr . THEN Instr ELSE Instr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    THEN    shift, and go to state 91
    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72


state 54

   35 Expr: Selection .

    $default  reduce using rule 35 (Expr)


state 55

   36 Expr: NEWC Classname . '(' LExprOpt ')'

    '('  shift, and go to state 92


state 56

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   49              | ADD Expr .
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    '.'  shift, and go to state 72

    $default  reduce using rule 49 (ExprOperateur)


state 57

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   48              | SUB Expr .
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    '.'  shift, and go to state 72

    $default  reduce using rule 48 (ExprOperateur)


state 58

   21 TypeC: VOIDC .

    $default  reduce using rule 21 (TypeC)


state 59

   19 TypeC: INTC .

    $default  reduce using rule 19 (TypeC)


state 60

   20 TypeC: STRINGC .

    $default  reduce using rule 20 (TypeC)


state 61

   22 TypeC: Classname .
   39 Expr: Classname .

    ADD       reduce using rule 22 (TypeC)
    ADD       [reduce using rule 39 (Expr)]
    SUB       reduce using rule 22 (TypeC)
    SUB       [reduce using rule 39 (Expr)]
    MUL       reduce using rule 39 (Expr)
    DIV       reduce using rule 39 (Expr)
    CONCAT    reduce using rule 39 (Expr)
    RelOp     reduce using rule 39 (Expr)
    '.'       reduce using rule 39 (Expr)
    ')'       reduce using rule 39 (Expr)
    $default  reduce using rule 22 (TypeC)


state 62

   80 Selection: '(' TypeC . Expr ')'

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 93
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 63

   34 Expr: '(' Expr . ')'
   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ')'     shift, and go to state 94


state 64

   72 Contenu: LDeclChamp IS . LInstr

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33
    '{'        shift, and go to state 12

    Expr           go to state 36
    ExprOperateur  go to state 37
    Instr          go to state 38
    LInstr         go to state 95
    Bloc           go to state 41
    Envoi          go to state 43
    Selection      go to state 44


state 65

   16 LDeclChamp: DeclChamp LDeclChamp .

    $default  reduce using rule 16 (LDeclChamp)


state 66

   44 ExprOperateur: Expr ADD . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 96
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 67

   45 ExprOperateur: Expr SUB . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 97
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 68

   46 ExprOperateur: Expr MUL . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 98
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 69

   47 ExprOperateur: Expr DIV . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 99
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 70

   50 ExprOperateur: Expr CONCAT . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 100
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 71

   51 ExprOperateur: Expr RelOp . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 101
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 72

   73 Envoi: Expr '.' . MethodeC
   75 Selection: Expr '.' . Id

    Id  shift, and go to state 102

    MethodeC  go to state 103


state 73

   52 Instr: Expr ';' .

    $default  reduce using rule 52 (Instr)


state 74

   59 LInstr: Instr LInstr .

    $default  reduce using rule 59 (LInstr)


state 75

   63 Bloc: '{' Contenu '}' .

    $default  reduce using rule 63 (Bloc)


state 76

   55 Instr: Selection AFF . Expr ';'

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 104
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 77

   29 OverrideOpt: OVERRIDE .

    $default  reduce using rule 29 (OverrideOpt)


state 78

   69 DeclChampMethod: DeclChamp .

    $default  reduce using rule 69 (DeclChampMethod)


state 79

   70 DeclChampMethod: DeclMethode .

    $default  reduce using rule 70 (DeclChampMethod)


state 80

   25 DeclMethode: OverrideOpt . DEF Id '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt . DEF Id '(' LParamOpt ')' TypeCOpt IS Bloc

    DEF  shift, and go to state 105


state 81

   64 BlocObj: '{' LDeclChampMethodOpt . '}'

    '}'  shift, and go to state 106


state 82

   65 LDeclChampMethodOpt: LDeclChampMethod .
   67 LDeclChampMethod: LDeclChampMethod . DeclChampMethod

    VAR       shift, and go to state 21
    OVERRIDE  shift, and go to state 77

    '}'       reduce using rule 65 (LDeclChampMethodOpt)
    $default  reduce using rule 30 (OverrideOpt)

    DeclChamp        go to state 78
    DeclMethode      go to state 79
    OverrideOpt      go to state 80
    DeclChampMethod  go to state 107


state 83

   68 LDeclChampMethod: DeclChampMethod .

    $default  reduce using rule 68 (LDeclChampMethod)


state 84

   12 Param: VAR Id ':' . TypeC ValVar

    VOIDC      shift, and go to state 58
    INTC       shift, and go to state 59
    STRINGC    shift, and go to state 60
    Classname  shift, and go to state 85

    TypeC  go to state 108


state 85

   22 TypeC: Classname .

    $default  reduce using rule 22 (TypeC)


state 86

   13 Param: Id ':' TypeC . ValVar

    AFF  shift, and go to state 109

    $default  reduce using rule 15 (ValVar)

    ValVar  go to state 110


state 87

   31 ExtendsOpt: EXTENDS . Classname '(' LExprOpt ')'

    Classname  shift, and go to state 111


state 88

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt . BlocOpt IS BlocObj

    '{'  shift, and go to state 12

    $default  reduce using rule 62 (BlocOpt)

    BlocOpt  go to state 112
    Bloc     go to state 113


state 89

   10 LParam: Param ',' LParam .

    $default  reduce using rule 10 (LParam)


state 90

   18 DeclChamp: VAR Id ':' . TypeC AffOpt ';'

    VOIDC      shift, and go to state 58
    INTC       shift, and go to state 59
    STRINGC    shift, and go to state 60
    Classname  shift, and go to state 85

    TypeC  go to state 114


state 91

   56 Instr: IF Expr THEN . Instr ELSE Instr

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33
    '{'        shift, and go to state 12

    Expr           go to state 36
    ExprOperateur  go to state 37
    Instr          go to state 115
    Bloc           go to state 41
    Envoi          go to state 43
    Selection      go to state 44


state 92

   36 Expr: NEWC Classname '(' . LExprOpt ')'

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    $default  reduce using rule 41 (LExprOpt)

    Expr           go to state 116
    LExprOpt       go to state 117
    LExpr          go to state 118
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 93

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id
   80          | '(' TypeC Expr . ')'

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ')'     shift, and go to state 119


state 94

   34 Expr: '(' Expr ')' .

    $default  reduce using rule 34 (Expr)


state 95

   72 Contenu: LDeclChamp IS LInstr .

    $default  reduce using rule 72 (Contenu)


state 96

   44 ExprOperateur: Expr . ADD Expr
   44              | Expr ADD Expr .
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 44 (ExprOperateur)


state 97

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   45              | Expr SUB Expr .
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 45 (ExprOperateur)


state 98

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   46              | Expr MUL Expr .
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 46 (ExprOperateur)


state 99

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   47              | Expr DIV Expr .
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    $default  reduce using rule 47 (ExprOperateur)


state 100

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   50              | Expr CONCAT Expr .
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    '.'  shift, and go to state 72

    $default  reduce using rule 50 (ExprOperateur)


state 101

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   51              | Expr RelOp Expr .
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    '.'     shift, and go to state 72

    RelOp  error (nonassociative)

    $default  reduce using rule 51 (ExprOperateur)


state 102

   74 MethodeC: Id . '(' LExprOpt ')'
   75 Selection: Expr '.' Id .

    '('  shift, and go to state 120

    $default  reduce using rule 75 (Selection)


state 103

   73 Envoi: Expr '.' MethodeC .

    $default  reduce using rule 73 (Envoi)


state 104

   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   55 Instr: Selection AFF Expr . ';'
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ';'     shift, and go to state 121


state 105

   25 DeclMethode: OverrideOpt DEF . Id '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF . Id '(' LParamOpt ')' TypeCOpt IS Bloc

    Id  shift, and go to state 122


state 106

   64 BlocObj: '{' LDeclChampMethodOpt '}' .

    $default  reduce using rule 64 (BlocObj)


state 107

   67 LDeclChampMethod: LDeclChampMethod DeclChampMethod .

    $default  reduce using rule 67 (LDeclChampMethod)


state 108

   12 Param: VAR Id ':' TypeC . ValVar

    AFF  shift, and go to state 109

    $default  reduce using rule 15 (ValVar)

    ValVar  go to state 123


state 109

   14 ValVar: AFF . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 124
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 110

   13 Param: Id ':' TypeC ValVar .

    $default  reduce using rule 13 (Param)


state 111

   31 ExtendsOpt: EXTENDS Classname . '(' LExprOpt ')'

    '('  shift, and go to state 125


state 112

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt BlocOpt . IS BlocObj

    IS  shift, and go to state 126


state 113

   61 BlocOpt: Bloc .

    $default  reduce using rule 61 (BlocOpt)


state 114

   18 DeclChamp: VAR Id ':' TypeC . AffOpt ';'

    AFF  shift, and go to state 127

    $default  reduce using rule 24 (AffOpt)

    AffOpt  go to state 128


state 115

   56 Instr: IF Expr THEN Instr . ELSE Instr

    ELSE  shift, and go to state 129


state 116

   42 LExpr: Expr . ',' LExpr
   43      | Expr .
   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72
    ','     shift, and go to state 130

    $default  reduce using rule 43 (LExpr)


state 117

   36 Expr: NEWC Classname '(' LExprOpt . ')'

    ')'  shift, and go to state 131


state 118

   40 LExprOpt: LExpr .

    $default  reduce using rule 40 (LExprOpt)


state 119

   80 Selection: '(' TypeC Expr ')' .

    $default  reduce using rule 80 (Selection)


state 120

   74 MethodeC: Id '(' . LExprOpt ')'

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    $default  reduce using rule 41 (LExprOpt)

    Expr           go to state 116
    LExprOpt       go to state 132
    LExpr          go to state 118
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 121

   55 Instr: Selection AFF Expr ';' .

    $default  reduce using rule 55 (Instr)


state 122

   25 DeclMethode: OverrideOpt DEF Id . '(' LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id . '(' LParamOpt ')' TypeCOpt IS Bloc

    '('  shift, and go to state 133


state 123

   12 Param: VAR Id ':' TypeC ValVar .

    $default  reduce using rule 12 (Param)


state 124

   14 ValVar: AFF Expr .
   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72

    $default  reduce using rule 14 (ValVar)


state 125

   31 ExtendsOpt: EXTENDS Classname '(' . LExprOpt ')'

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    $default  reduce using rule 41 (LExprOpt)

    Expr           go to state 116
    LExprOpt       go to state 134
    LExpr          go to state 118
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 126

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt BlocOpt IS . BlocObj

    '{'  shift, and go to state 45

    BlocObj  go to state 135


state 127

   23 AffOpt: AFF . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 136
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 128

   18 DeclChamp: VAR Id ':' TypeC AffOpt . ';'

    ';'  shift, and go to state 137


state 129

   56 Instr: IF Expr THEN Instr ELSE . Instr

    RETURN     shift, and go to state 22
    IF         shift, and go to state 23
    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33
    '{'        shift, and go to state 12

    Expr           go to state 36
    ExprOperateur  go to state 37
    Instr          go to state 138
    Bloc           go to state 41
    Envoi          go to state 43
    Selection      go to state 44


state 130

   42 LExpr: Expr ',' . LExpr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 116
    LExpr          go to state 139
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 131

   36 Expr: NEWC Classname '(' LExprOpt ')' .

    $default  reduce using rule 36 (Expr)


state 132

   74 MethodeC: Id '(' LExprOpt . ')'

    ')'  shift, and go to state 140


state 133

   25 DeclMethode: OverrideOpt DEF Id '(' . LParamOpt ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' . LParamOpt ')' TypeCOpt IS Bloc

    VAR  shift, and go to state 16
    Id   shift, and go to state 17

    $default  reduce using rule 9 (LParamOpt)

    LParamOpt  go to state 141
    LParam     go to state 19
    Param      go to state 20


state 134

   31 ExtendsOpt: EXTENDS Classname '(' LExprOpt . ')'

    ')'  shift, and go to state 142


state 135

    6 Class: classTete '(' LParamOpt ')' ExtendsOpt BlocOpt IS BlocObj .

    $default  reduce using rule 6 (Class)


state 136

   23 AffOpt: AFF Expr .
   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72

    $default  reduce using rule 23 (AffOpt)


state 137

   18 DeclChamp: VAR Id ':' TypeC AffOpt ';' .

    $default  reduce using rule 18 (DeclChamp)


state 138

   56 Instr: IF Expr THEN Instr ELSE Instr .

    $default  reduce using rule 56 (Instr)


state 139

   42 LExpr: Expr ',' LExpr .

    $default  reduce using rule 42 (LExpr)


state 140

   74 MethodeC: Id '(' LExprOpt ')' .

    $default  reduce using rule 74 (MethodeC)


state 141

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt . ')' ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' LParamOpt . ')' TypeCOpt IS Bloc

    ')'  shift, and go to state 143


state 142

   31 ExtendsOpt: EXTENDS Classname '(' LExprOpt ')' .

    $default  reduce using rule 31 (ExtendsOpt)


state 143

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' . ':' TypeC AFF Expr
   26            | OverrideOpt DEF Id '(' LParamOpt ')' . TypeCOpt IS Bloc

    ':'  shift, and go to state 144

    $default  reduce using rule 28 (TypeCOpt)

    TypeCOpt  go to state 145


state 144

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' . TypeC AFF Expr
   27 TypeCOpt: ':' . TypeC

    VOIDC      shift, and go to state 58
    INTC       shift, and go to state 59
    STRINGC    shift, and go to state 60
    Classname  shift, and go to state 85

    TypeC  go to state 146


state 145

   26 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt . IS Bloc

    IS  shift, and go to state 147


state 146

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC . AFF Expr
   27 TypeCOpt: ':' TypeC .

    AFF  shift, and go to state 148

    $default  reduce using rule 27 (TypeCOpt)


state 147

   26 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt IS . Bloc

    '{'  shift, and go to state 12

    Bloc  go to state 149


state 148

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC AFF . Expr

    NEWC       shift, and go to state 24
    THIS       shift, and go to state 25
    SUPER      shift, and go to state 26
    RESULT     shift, and go to state 27
    ADD        shift, and go to state 28
    SUB        shift, and go to state 29
    Id         shift, and go to state 30
    Classname  shift, and go to state 31
    Cste       shift, and go to state 32
    '('        shift, and go to state 33

    Expr           go to state 150
    ExprOperateur  go to state 37
    Envoi          go to state 43
    Selection      go to state 54


state 149

   26 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' TypeCOpt IS Bloc .

    $default  reduce using rule 26 (DeclMethode)


state 150

   25 DeclMethode: OverrideOpt DEF Id '(' LParamOpt ')' ':' TypeC AFF Expr .
   44 ExprOperateur: Expr . ADD Expr
   45              | Expr . SUB Expr
   46              | Expr . MUL Expr
   47              | Expr . DIV Expr
   50              | Expr . CONCAT Expr
   51              | Expr . RelOp Expr
   73 Envoi: Expr . '.' MethodeC
   75 Selection: Expr . '.' Id

    ADD     shift, and go to state 66
    SUB     shift, and go to state 67
    MUL     shift, and go to state 68
    DIV     shift, and go to state 69
    CONCAT  shift, and go to state 70
    RelOp   shift, and go to state 71
    '.'     shift, and go to state 72

    $default  reduce using rule 25 (DeclMethode)
